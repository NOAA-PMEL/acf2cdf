#Fri Oct 07 15:35:58 PDT 2016
jnlp.offline-allowed=false
javadoc.splitindex=true
build.classes.excludes=**/*.java,**/*.form
jnlp.codebase.url=$$$$codebase
javadoc.author=false
build.sysclasspath=ignore
javac.target=1.5
build.generated.dir=${build.dir}/generated
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
debug.test.classpath=${run.test.classpath}
jnlp.descriptor=application
build.dir=build
javac.deprecation=false
jnlp.signed=true
test.src.dir=test
junit.selected.version=4
jar.archive.disabled=${jnlp.enabled}
application.homepage=http\://saga.pmel.noaa.gov
includes=**
application.vendor=NOAA/PMEL
source.reference.epic.jar=/home/lorax/derek/Software/java/epic/epic_src.jar
mkdist.disabled=false
jar.compress=true
jnlp.mixed.code=default
ant.customtasks.libs=JWSAntTasks
annotation.processing.processors.list=
javadoc.version=false
build.classes.dir=${build.dir}/classes
dist.dir=dist
file.reference.nlog4j-1.2.25.jar=/home/lorax/derek/Software/java/netcdf/v2.2/netcdfAll-2.2.22/nlog4j-1.2.25.jar
manifest.file=manifest.mf
file.reference.javaws.jar=/usr/java/latest/jre/lib/javaws.jar
javac.source=1.5
run.jvmargs=
source.reference.nlog4j-1.2.25.jar=/home/lorax/derek/Software/java/netcdf/v2.2/netcdfAll-2.2.22.zip
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
build.generated.sources.dir=${build.dir}/generated-sources
jnlp.signing=generated
javadoc.notree=false
jaxbwiz.endorsed.dirs="${netbeans.home}/../ide12/modules/ext/jaxb/api"
dist.jar=${dist.dir}/acf2cdf.jar
platform.active=default_platform
annotation.processing.enabled=true
main.class=acf2cdf.Acf2cdfApp
dist.javadoc.dir=${dist.dir}/javadoc
file.reference.epic.jar=/home/lorax/derek/Software/java/epic/epic.jar
javadoc.additionalparam=
javac.classpath=\
    ${libs.swing-app-framework.classpath}:\
    ${file.reference.netcdf-2.2.22.jar}:\
    ${file.reference.nlog4j-1.2.25.jar}:\
    ${file.reference.epic.jar}
javadoc.noindex=false
annotation.processing.enabled.in.editor=false
javadoc.private=false
javadoc.encoding=${source.encoding}
build.test.classes.dir=${build.dir}/test/classes
jar.index=${jnlp.enabled}
javac.compilerargs=
jnlp.codebase.user=http\://erwin/apps/acf2cdf
source.encoding=UTF-8
application.desc=Converts an ACF file to an EPIC netCDF file for use on the ACF\ndataserver
jnlp.signing.keystore=
meta.inf.dir=${src.dir}/META-INF
annotation.processing.run.all.processors=true
excludes=
application.title=ACF to netCDF Converter
jnlp.codebase.type=user
file.reference.netcdf-2.2.22.jar=/home/lorax/derek/Software/java/netcdf/v2.2/netcdf-2.2.22.jar
javac.processorpath=\
    ${javac.classpath}
build.test.results.dir=${build.dir}/test/results
endorsed.classpath=\
    ${java.home}/lib/javaws.jar
javadoc.use=true
javadoc.nonavbar=false
jnlp.signing.alias=acf2cdf
javadoc.windowtitle=
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.hamcrest.classpath}
src.dir=src
debug.classpath=${run.classpath}
jnlp.enabled=true
